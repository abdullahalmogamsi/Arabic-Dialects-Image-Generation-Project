# -*- coding: utf-8 -*-
"""Final_Flux_Image_Generation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ppv6eYutcddjrgevo8MWm9wrP4_miq9g

#  **Get the Flux  Model from Huggingface**

## **Load the model**
"""

from google.colab import userdata
HF_Token = userdata.get('HF_Token')

# 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
!huggingface-cli login --token $HF_Token

!pip install -U bitsandbytes

mport torch
from diffusers import FluxPipeline

pipe = FluxPipeline.from_pretrained("black-forest-labs/FLUX.1-schnell", torch_dtype=torch.bfloat16)
# pipe.enable_model_cpu_offload() #save some VRAM by offloading the model to CPU. Remove this if you have enough GPU power

pipe.to(device="cuda", dtype=torch.float16)

prompt = "girl with blue jacket"
image = pipe(
    prompt,
    guidance_scale=0.0,
    num_inference_steps=2,
    max_sequence_length=256,
    # generator=torch.Generator("cpu").manual_seed(0)
).images[0]
# image.save("flux-schnell.png")

"""### **Getting the Data**"""

#connect to drive

from google.colab import drive
drive.mount('/content/drive')

import os

def count_files_in_folders(root_folder):

  folder_counts = {}
  for foldername, subfolders, filenames in os.walk(root_folder):
    folder_counts[foldername] = len(filenames)
  return folder_counts

root_folder = "/content/drive/MyDrive/Final V Project 283/Flux Generated Images‏/Flux Generated Images"
file_counts = count_files_in_folders(root_folder)

for folder, count in file_counts.items():
    print(f"Folder: {folder}, Number of files: {count}")

!unzip "/content/drive/MyDrive/Final V Project 283/Text_transformer_dialects_data/transformer_dialects_data.zip"



"""## **Generating images Function and data**"""

import pandas as pd
#model 3 English
df_egyptian_model_3 = pd.read_csv('egyptian_data_transformed_model_3.csv')
df_khaleji_model_3 = pd.read_csv('khaleji_data_transformed_model_3.csv')
df_saudi_model_3 = pd.read_csv('saudi_data_transformed_model_3.csv')
df_morrocon_model_3 = pd.read_csv('morrocon_data_transformed_model_3.csv')

# model Gemini English
df_egyptian_model_4_eng = pd.read_csv('/content/drive/MyDrive/Final V Project 283/Text_transformer_dialects_data/Gemini to English data/egyptain_english_gemini.csv')
df_khaleji_model_4_eng = pd.read_csv('/content/drive/MyDrive/Final V Project 283/Text_transformer_dialects_data/Gemini to English data/khaleji_english_gemini.csv')
df_saudi_model_4_eng = pd.read_csv('/content/drive/MyDrive/Final V Project 283/Text_transformer_dialects_data/Gemini to English data/saudi_arabia_english_gemini.csv')
df_morrocon_model_4_eng = pd.read_csv('/content/drive/MyDrive/Final V Project 283/Text_transformer_dialects_data/Gemini to English data/moroccan_english_gemini.csv')

print("df_egyptian_model_3 shape:", df_egyptian_model_3.shape)
print("df_khaleji_model_3 shape:", df_khaleji_model_3.shape)
print("df_saudi_model_3 shape:", df_saudi_model_3.shape)
print("df_morrocon_model_3 shape:", df_morrocon_model_3.shape)

print("df_egyptian_model_4_eng shape:", df_egyptian_model_4_eng.shape)
print("df_khaleji_model_4_eng shape:", df_khaleji_model_4_eng.shape)
print("df_saudi_model_4_eng shape:", df_saudi_model_4_eng.shape)
print("df_morrocon_model_4_eng shape:", df_morrocon_model_4_eng.shape)

df_morrocon_model_4_eng.head()

import os
from PIL import Image
def generate_images(captions,images_values,output_dir,df_name):
    os.makedirs(output_dir, exist_ok=True)
    count=0
    for i, caption in enumerate(captions):
          image_name = image_values[i][:-4] + df_name
          count+=1
          if os.path.exists(os.path.join(output_dir, image_name)):
              print(f"Image '{image_name}' already exists. Skipping generation.")
              continue

          image = pipeline(caption, num_inference_steps=25).images[0]
          image.save(os.path.join(output_dir, image_name))
    print("number of generated images: ",count)

image_values=df_egyptian_model_3['Image_ID'].tolist()

"""## **Egyptain Images Generation**

### **Egyptain transformation Model 3**
"""

egyptian_model3_captions = df_egyptian_model_3['transformed_text'].tolist()

len(egyptian_model3_captions)

egyptian_model3_captions = df_egyptian_model_3['transformed_text'].tolist()
output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/Egyptain Dialect Generated images/generated_egyptain_images_model3"
generate_images(egyptian_model3_captions,image_values, output_dir,"gen_egy_3.jpg")

"""### **Egyptain transformation Model 4 Gemini English**

"""

egyptian_model4_captions = df_egyptian_model_4_eng['transformed_text'].tolist()

len(egyptian_model4_captions)

output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/Egyptain Dialect Generated images/generated_egyptain_english_gemini_images"
generate_images(egyptian_model4_captions,image_values, output_dir,"gen_egy_4_eng.jpg")

"""## **Moroccan Images Generation**

### **Moroccan transformation Model 3**
"""

morrocon_model3_captions = df_morrocon_model_3['transformed_text'].tolist()

len(morrocon_model3_captions)

import os

def count_files(directory):
  return len([name for name in os.listdir(directory) if os.path.isfile(os.path.join(directory, name))])

directory_path = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/morrocon_generated_images/generated_morrocon_images_model3"
num_files = count_files(directory_path)
print(f"Number of files in '{directory_path}': {num_files}")

output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/morrocon_generated_images/generated_morrocon_images_model3"
generate_images(morrocon_model3_captions,image_values, output_dir,"gen_mor_3.jpg")

"""### **Moroccan transformation Model 4 Gemini eng**"""

morrocon_model4_captions = df_morrocon_model_4_eng['transformed_text'].tolist()

len(morrocon_model4_captions)

output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/morrocon_generated_images/generated_morrocon_images_model4_eng"
generate_images(morrocon_model4_captions,image_values, output_dir,"gen_mor_4_eng.jpg")

"""## **Khaleji Images Generation**

### Khaleji transformation Model 3
"""

khaleeji_model3_captions = df_khaleji_model_3['transformed_text'].tolist()

len(khaleeji_model3_captions)

output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/khaleeji_generated_images/generated_khaleeji_images_model3"
generate_images(khaleeji_model3_captions, image_values, output_dir, "gen_kha_3.jpg")



"""### Khaleji transformation Model 4 Gemini English

"""

khaleeji_model4_captions = df_khaleji_model_4_eng['transformed_text'].tolist()

output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/khaleeji_generated_images/generated_khaleeji_images_model4_eng"
generate_images(khaleeji_model4_captions, image_values, output_dir, "gen_kha_4_eng.jpg")

"""## **saudi arabia images generation**

###saudi arabia model 3
"""

saudi_model3_captions = df_saudi_model_3['transformed_text'].tolist()

len(saudi_model3_captions)

output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/khaleji_saudi_generated_images/generated_saudi_images_model3"
generate_images(saudi_model3_captions, image_values, output_dir, "gen_kha_saudi_3.jpg")



"""###saudi arabia model 4 Gemini English"""

saudi_model4_captions = df_saudi_model_4_eng['transformed_text'].tolist()

len(saudi_model4_captions)

output_dir = "/content/drive/MyDrive/Final V Project 283/Stable Diffusion Generated Images‏/khaleji_saudi_generated_images/generated_saudi_images_model4_eng"
generate_images(saudi_model4_captions, image_values, output_dir, "gen_kha_saudi_4_eng.jpg")

